<UserControl x:Class="HgSccHelper.RevLogControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:HgSccHelper"
             xmlns:ui="clr-namespace:HgSccHelper.UI"
             xmlns:converters="clr-namespace:HgSccHelper.UI.Converters"
             xmlns:TabControlTest="clr-namespace:TabControlTest" mc:Ignorable="d"
             d:DesignHeight="317" d:DesignWidth="476"
             Loaded="UserControl_Loaded"
             Unloaded="UserControl_Unloaded">
    <UserControl.CommandBindings>
        <CommandBinding Command="{x:Static ui:Commands.DiffPreviousCommand}"
                        CanExecute="DiffPrevious_CanExecute"
                        Executed="DiffPrevious_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.FileHistoryCommand}"
                        CanExecute="FileHistory_CanExecute"
                        Executed="FileHistory_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.AnnotateCommand}"
                        CanExecute="Annotate_CanExecute"
                        Executed="Annotate_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.GrepCommand}"
                        CanExecute="Grep_CanExecute"
                        Executed="Grep_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.ViewFileCommand}"
                        CanExecute="ViewFile_CanExecute"
                        Executed="ViewFile_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.UpdateCommand}"
                        CanExecute="Update_CanExecute"
                        Executed="Update_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.TagsCommand}"
                        CanExecute="Tags_CanExecute"
                        Executed="Tags_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.BookmarksCommand}"
                        CanExecute="Bookmarks_CanExecute"
                        Executed="Bookmarks_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.MergeCommand}"
                        CanExecute="Merge_CanExecute"
                        Executed="Merge_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.ArchiveCommand}"
                        CanExecute="Archive_CanExecute"
                        Executed="Archive_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.BundleCommand}"
                        CanExecute="Bundle_CanExecute"
                        Executed="Bundle_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.RebaseCommand}"
                        CanExecute="Rebase_CanExecute"
                        Executed="Rebase_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:RevLogControl.ReloadCommand}"
                        CanExecute="Reload_CanExecute"
                        Executed="Reload_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:RevLogControl.ReadNextCommand}"
                        CanExecute="ReadNext_CanExecute"
                        Executed="ReadNext_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:RevLogControl.ReadAllCommand}"
                        CanExecute="ReadAll_CanExecute"
                        Executed="ReadAll_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:RevLogControl.FilterByRevsetCommand}"
                        CanExecute="FilterByRevset_CanExecute"
                        Executed="FilterByRevset_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:RevLogControl.ShowFilterCommand}"
                        Executed="ShowFilter_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.StopCommand}"
                        CanExecute="Stop_CanExecute"
                        Executed="Stop_Executed">
        </CommandBinding>
    </UserControl.CommandBindings>
    <UserControl.Resources>
        <converters:RemoveLastNewLineConverter x:Key="RemoveLastNewLineConverter" />
        <converters:HgStatusToColorConverter x:Key="HgStatusToColor" />
        <DataTemplate x:Key="statusCellTemplate">
            <TextBlock Text="{Binding FileInfo.Status}"
                       Foreground="{Binding Path=FileInfo.Status, Converter={StaticResource HgStatusToColor}}">
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="myCellTemplateDesc">
        	<StackPanel Orientation="Horizontal">
        		<local:RevLogLinesVisual Height="22"
										 RevLogLines="{Binding}" />
                <Border BorderThickness="1"
                        Margin="0,1,5,1"
                        VerticalAlignment="Center"
                        SnapsToDevicePixels="True"
                        BorderBrush="Green">
                    <TextBlock Text="{Binding BranchInfo.Name}" VerticalAlignment="Center"
                           Background="GreenYellow"
                           Foreground="Black"
                           Padding="5,1">
                    </TextBlock>
                    <Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BranchInfo}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>
                </Border>
                <ItemsControl ItemsSource="{Binding Path=Current.ChangeDesc.Bookmarks}"
                              Focusable="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"></StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="1"
                                    Margin="0,1,5,1"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="True"
                                    BorderBrush="Indigo">
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center"
                                       Padding="5,1">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Background" Value="LightSkyBlue"></Setter>
                                            <Setter Property="Foreground" Value="Black"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                                    <Setter Property="Background" Value="Cyan"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <ItemsControl ItemsSource="{Binding Path=Current.ChangeDesc.Tags}"
                              Focusable="False">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"></StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderThickness="1"
                                    Margin="0,1,5,1"
                                    VerticalAlignment="Center"
                                    SnapsToDevicePixels="True"
                                    BorderBrush="Goldenrod">
                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center"
                                       Background="Yellow"
                                       Foreground="Black"
                                       Padding="5,1">
                                </TextBlock>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <TextBlock Text="{Binding Current.ChangeDesc.OneLineDesc}" VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsCurrent}" Value="True">
                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                    <Setter Property="TextDecorations" Value="Underline"></Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
		</DataTemplate>
        <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
			<Setter Property="Padding" Value="0" />
			<Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <StackPanel x:Name="Bd" SnapsToDevicePixels="True"
                                    Background="{TemplateBinding Background}">
                            <GridViewRowPresenter Content="{TemplateBinding Content}"
                                          Columns="{TemplateBinding GridView.ColumnCollection}"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Command="{x:Static local:RevLogControl.ShowFilterCommand}"
                    Key="F"
                    Modifiers="Control">            
        </KeyBinding>
    </UserControl.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ToolBarTray Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <ToolBar Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Button Content="Diff Previous"
                        Command="{x:Static ui:Commands.DiffPreviousCommand}"
                        MinWidth="75" />
                <Button Content="File History"
                        Command="{x:Static ui:Commands.FileHistoryCommand}"
                        MinWidth="75" />
                <Button Content="Annotate"
                        Command="{x:Static ui:Commands.AnnotateCommand}"
                        MinWidth="75" />
                <Button Content="Grep"
                        Command="{x:Static ui:Commands.GrepCommand}"
                        MinWidth="75" />
                <Button Content="View File"
                        Command="{x:Static ui:Commands.ViewFileCommand}"
                        MinWidth="75" />
                <Separator />
                <Button Content="Update to Revision"
                        Command="{x:Static ui:Commands.UpdateCommand}"
                        MinWidth="75" />
                <Button Content="Add/Remove Tag"
                        Command="{x:Static ui:Commands.TagsCommand}"
                        MinWidth="75" />
                <Button Content="Bookmarks"
                        Command="{x:Static ui:Commands.BookmarksCommand}"
                        MinWidth="75" />
                <Separator />
                <Button Content="Merge"
                        Command="{x:Static ui:Commands.MergeCommand}"
                        MinWidth="75" />
                <Button Content="Rebase"
                        Command="{x:Static ui:Commands.RebaseCommand}"
                        MinWidth="75" />
                <Button Content="Archive"
                        Command="{x:Static ui:Commands.ArchiveCommand}"
                        MinWidth="75" />
                <Button Content="Bundle"
                        Command="{x:Static ui:Commands.BundleCommand}"
                        MinWidth="75" />
                <Separator />
                <Button Content="Show Filter"
                        Command="{x:Static local:RevLogControl.ShowFilterCommand}"
                        MinWidth="75" />
            </ToolBar>
        </ToolBarTray>
        <Grid Grid.Row="1" x:Name="gridFilterByRevset"
              Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" Content="Filter by revset:" Margin="5,0"></Label>
            <TextBox Grid.Column="1" x:Name="textRevSet" VerticalAlignment="Center"
                     Margin="0,5,5,0"
                     MaxLines="1">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{x:Static local:RevLogControl.FilterByRevsetCommand}" />
                </TextBox.InputBindings>
            </TextBox>
            <Button Grid.Column="2" Content="Apply"
                    Padding="8,0"
                    MinHeight="23"
                    Margin="0,5,5,0"
                    VerticalAlignment="Center"
                    Command="{x:Static local:RevLogControl.FilterByRevsetCommand}">                
            </Button>
        </Grid>
        <Grid Grid.Row="2" KeyboardNavigation.TabNavigation="Cycle"
              Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="300" />
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" Name="changeDescRow"/>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <ListView x:Name="graphView"
                  Grid.Row="0"
                  Grid.Column="0"
                  Margin="0, 0, 0, 5"
                  ItemContainerStyle="{DynamicResource ListViewItemStyle1}"
                  SelectionChanged="graphView_SelectionChanged">
                <ListView.InputBindings>
                    <KeyBinding Command="{x:Static ui:Commands.UpdateCommand}"
                            Modifiers="Control" Key="U" />
                    <KeyBinding Command="{x:Static ui:Commands.TagsCommand}"
                            Modifiers="Control" Key="T" />
                    <KeyBinding Command="{x:Static ui:Commands.MergeCommand}"
                            Modifiers="Control" Key="M" />
                </ListView.InputBindings>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{x:Static ui:Commands.UpdateCommand}"
                              InputGestureText="Ctrl + U"></MenuItem>
                        <MenuItem Command="{x:Static ui:Commands.TagsCommand}"
                              InputGestureText="Ctrl + T"></MenuItem>
                        <MenuItem Command="{x:Static ui:Commands.BookmarksCommand}"></MenuItem>
                        <Separator></Separator>
                        <MenuItem Command="{x:Static ui:Commands.MergeCommand}"
                              InputGestureText="Ctrl + M"></MenuItem>
                        <MenuItem Command="{x:Static ui:Commands.RebaseCommand}"></MenuItem>
                        <Separator></Separator>
                        <MenuItem Command="{x:Static ui:Commands.ArchiveCommand}"></MenuItem>
                        <MenuItem Command="{x:Static ui:Commands.BundleCommand}"></MenuItem>
                        <MenuItem Command="{x:Static ui:Commands.GrepCommand}"></MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.View>
                    <GridView x:Name="graphViewGrid">
                        <GridViewColumn Header="Rev" Width="70" DisplayMemberBinding="{Binding Current.ChangeDesc.Rev}" />
                        <GridViewColumn Header="Desc" Width="450" CellTemplate="{StaticResource myCellTemplateDesc}"/>
                        <!--<GridViewColumn Header="Desc" Width="250" DisplayMemberBinding="{Binding Current.ChangeDesc.OneLineDesc}" />-->
                        <GridViewColumn Header="Author" Width="250" DisplayMemberBinding="{Binding Current.ChangeDesc.Author}" />
                        <GridViewColumn Header="Date" Width="150" DisplayMemberBinding="{Binding Current.ChangeDesc.Date}" />
                    </GridView>
                </ListView.View>
            </ListView>
            <StackPanel Grid.Row="0"
                    Grid.Column="1" VerticalAlignment="Top">
                <Button Content="Stop"
                    Command="{x:Static ui:Commands.StopCommand}"
                    Margin="5,0,0,0" Padding="5, 0" Focusable="False" IsTabStop="False">
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="0"
                    Grid.Column="1" VerticalAlignment="Bottom">
                <Button Content="+500"
                    Command="{x:Static local:RevLogControl.ReadNextCommand}"
                    Margin="5,5,0,0" Padding="5, 0" Focusable="False" IsTabStop="False">
                </Button>
                <Button Content="All"
                    Command="{x:Static local:RevLogControl.ReadAllCommand}"
                    Margin="5,5,0,0" Padding="5, 0" Focusable="False" IsTabStop="False">
                </Button>
                <Button Content="Reload"
                    Command="{x:Static local:RevLogControl.ReloadCommand}"
                    Margin="5,5,0,5" Padding="5, 0" Focusable="False" IsTabStop="False">
                </Button>
            </StackPanel>
            <GridSplitter Grid.Row="0" Margin="0"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Height="5" Background="Transparent" IsTabStop="False" Cursor="SizeNS" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" />
            <StackPanel Grid.Row="1" Grid.ColumnSpan="2"
                        Orientation="Horizontal" Margin="0, 0, 0, 5"
                        DataContext="{Binding Path=SelectedItem.Current.ChangeDesc, ElementName=graphView, Mode=OneWay}">
                <Label Content="Changeset:" />
                <TextBox Text="{Binding Path=Rev}" IsReadOnly="True" Margin="5, 0" MinWidth="70"/>
                <Label Content=":" />
                <TextBox Text="{Binding Path=SHA1}" IsReadOnly="True" Margin="5, 0" MinWidth="120"/>
                <Label Content="Author:" />
                <TextBox Text="{Binding Path=Author}" IsReadOnly="True" Margin="5, 0" MinWidth="150"/>
                <Label Content="Date:" />
                <TextBox Text="{Binding Path=Date}" IsReadOnly="True" Margin="5, 0" MinWidth="150"/>
            </StackPanel>
            <TextBox Name="textChangeDesc"
                     Grid.Row="2" Grid.ColumnSpan="2"
                     DataContext="{Binding Path=SelectedItem.Current.ChangeDesc, ElementName=graphView, Mode=OneWay}"
                     Text="{Binding Path=Desc, Converter={StaticResource RemoveLastNewLineConverter}}" TextWrapping="Wrap"
                     Margin="0,0,0,5"
                     IsReadOnly="True" MinLines="2" MaxLines="5" VerticalScrollBarVisibility="Auto">
            </TextBox>
            <GridSplitter Grid.Row="2" Margin="0"
                          Grid.Column="0"
                          Grid.ColumnSpan="2"
                          DragDelta="GridSplitter_DragDelta"
                          Height="5" Background="Transparent" IsTabStop="False"
                          Cursor="SizeNS" HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom" />
            <Grid Grid.Row="3"
                  Grid.Column="0"
                  Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition x:Name="diffColumn"  Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TabControlTest:TabControlEx Grid.Column="0"
                                             SelectionChanged="tabParentsDiff_SelectionChanged"
                                             x:Name="tabParentsDiff">
                    <TabControl.Template>
                        <ControlTemplate TargetType="TabControl">
                            <DockPanel>
                                <TabPanel Margin="5,0,0,0"  DockPanel.Dock="Top" IsItemsHost="True" />
                                <Grid DockPanel.Dock="Bottom" x:Name="PART_ItemsHolder" />
                            </DockPanel>
                            <!-- no content presenter -->
                        </ControlTemplate>
                    </TabControl.Template>
                    <TabControl.ItemContainerStyle>
                        <Style TargetType="{x:Type TabItem}">
                            <Setter Property="Header" Value="{Binding Path=HeaderString, Mode=OneWay}" />
                            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                            <Setter Property="Margin" Value="0" />
                        </Style>
                    </TabControl.ItemContainerStyle>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <ListView ItemsSource="{Binding Path=Files}"
                                  SelectionChanged="listFiles_SelectionChanged"
                                  VirtualizingStackPanel.IsVirtualizing="True"
                                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                                  GridViewColumnHeader.Click="GridViewColumnHeaderClickedHandler">
                                <ListView.InputBindings>
                                    <KeyBinding Command="{x:Static ui:Commands.DiffPreviousCommand}"
                                    Modifiers="Control" Key="D" />
                                    <KeyBinding Command="{x:Static ui:Commands.FileHistoryCommand}"
                                    Modifiers="Control" Key="H" />
                                </ListView.InputBindings>
                                <ListView.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Command="{x:Static ui:Commands.DiffPreviousCommand}"
                                        InputGestureText="Ctrl + D"></MenuItem>
                                        <MenuItem Command="{x:Static ui:Commands.FileHistoryCommand}"
                                        InputGestureText="Ctrl + H"></MenuItem>
                                        <MenuItem Command="{x:Static ui:Commands.AnnotateCommand}"
                                        ></MenuItem>
                                        <MenuItem Command="{x:Static ui:Commands.GrepCommand}"></MenuItem>
                                        <MenuItem Command="{x:Static ui:Commands.ViewFileCommand}"
                                        ></MenuItem>
                                    </ContextMenu>
                                </ListView.ContextMenu>
                                <ListView.View>
                                    <GridView>
                                        <GridViewColumn Header="Status" Width="90" CellTemplate="{StaticResource statusCellTemplate}" />
                                        <GridViewColumn Header="File" Width="850"  DisplayMemberBinding="{Binding FileInfo.FileViewString}" />
                                    </GridView>
                                </ListView.View>
                                <ListView.Resources>
                                    <Style TargetType="ListViewItem">
                                        <!--<Style TargetType="ListViewItem" BasedOn="{StaticResource {x:Type ListViewItem}}">-->
                                        <EventSetter Event="MouseDoubleClick" Handler="ListViewFiles_MouseDoubleClick" />
                                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                                    </Style>
                                </ListView.Resources>
                            </ListView>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControlTest:TabControlEx>
                <GridSplitter Margin="0"
                          Grid.Column="0"
                          DragDelta="DiffGridSplitter_DragDelta"
                          Width="5" Background="Transparent" IsTabStop="False"
                          Cursor="SizeWE" VerticalAlignment="Stretch"
                          HorizontalAlignment="Right" />
                <Expander ExpandDirection="Right"
                          Grid.Column="1"
                          Expanded="expanderDiff_Expanded"
                          Collapsed="expanderDiff_Collapsed"
                          x:Name="expanderDiff">
                    <Expander.Header>
                        <Label Content="Show Diff">
                            <Label.LayoutTransform>
                                <RotateTransform Angle="270"></RotateTransform>
                            </Label.LayoutTransform>
                        </Label>
                    </Expander.Header>
                    <ui:DiffColorizerControl x:Name="diffColorizer"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch">
                    </ui:DiffColorizerControl>
                </Expander>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
