<Window x:Class="HgSccHelper.SynchronizeWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:HgSccHelper"
    xmlns:ui="clr-namespace:HgSccHelper.UI"
    Height="600"
    Width="1026"
    x:Name="root"
    Loaded="Window_Loaded"
    Closed="Window_Closed"
    PreviewKeyDown="Window_PreviewKeyDown"
    WindowStartupLocation="CenterScreen">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:SynchronizeWindow.IncomingCommand}"
                        CanExecute="Incoming_CanExecute"
                        Executed="Incoming_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:SynchronizeWindow.OutgoingCommand}"
                        CanExecute="Outgoing_CanExecute"
                        Executed="Outgoing_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:SynchronizeWindow.PushCommand}"
                        CanExecute="Push_CanExecute"
                        Executed="Push_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:SynchronizeWindow.PullCommand}"
                        CanExecute="Pull_CanExecute"
                        Executed="Pull_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static ui:Commands.StopCommand}"
                        CanExecute="Stop_CanExecute"
                        Executed="Stop_Executed">
        </CommandBinding>
        <CommandBinding Command="{x:Static local:SynchronizeWindow.SynchronizeSettingsCommand}"
                        CanExecute="SynchronizeSettings_CanExecute"
                        Executed="SynchronizeSettings_Executed">
        </CommandBinding>
    </Window.CommandBindings>
    <Window.Resources>
        <ItemsPanelTemplate x:Key="PathItemsPanelTemplate">
            <StackPanel Orientation="Vertical"
                        Grid.IsSharedSizeScope="True"
                        HorizontalAlignment="Stretch">
            </StackPanel>
        </ItemsPanelTemplate>
        <DataTemplate x:Key="PathComboItemTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="Alias" Width="Auto" />
                    <ColumnDefinition SharedSizeGroup="Path" Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Text="{Binding Path=Alias}"
                           Grid.Column="0"
                           Margin="0, 0, 20, 0"
                           FontWeight="Bold"/>
                <TextBlock Grid.Column="1"
                            Text="{Binding Path=Path}" />
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <ToolBarTray Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <ToolBar Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Button Content="Incoming"
                        Command="{x:Static local:SynchronizeWindow.IncomingCommand}"
                        MinWidth="75" />
                <Button Content="Pull"
                        Command="{x:Static local:SynchronizeWindow.PullCommand}"
                        MinWidth="75" />
                <Separator />
                <Button Content="Outgoing"
                        Command="{x:Static local:SynchronizeWindow.OutgoingCommand}"
                        MinWidth="75" />
                <Button Content="Push"
                        Command="{x:Static local:SynchronizeWindow.PushCommand}"
                        MinWidth="75" />
                <Separator />
                <Button Content="Stop"
                        Command="{x:Static ui:Commands.StopCommand}"
                        MinWidth="75" />
                <Separator />
                <Button Content="Settings"
                        Command="{x:Static local:SynchronizeWindow.SynchronizeSettingsCommand}"
                        MinWidth="75" />
            </ToolBar>
        </ToolBarTray>
        <StackPanel Grid.Row="1">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="Repository path:" Margin="5" />
                <ComboBox Grid.Column="1" Name="comboBoxPaths" MinWidth="500"
                          ItemTemplate="{StaticResource PathComboItemTemplate}"
                          HorizontalContentAlignment="Stretch"
                          TextSearch.TextPath="Path"
                          Margin="5,5,0,5"
                          ItemsPanel="{StaticResource PathItemsPanelTemplate}"
                          ItemsSource="{Binding}" IsEditable="True">
                </ComboBox>
                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Stretch">
                    <Button Content="Browse..." MinWidth="75" MinHeight="23"
                        Margin="5"
                        Padding="10,0"
                        Click="Browse_Click"
                        ></Button>
                    <Button Content="Browse for Bundle..." MinWidth="75" MinHeight="23"
                        Margin="0,5,5,5"
                        Padding="10,0"
                        Click="BrowseForBundle_Click"
                        ></Button>
                </StackPanel>
                <Expander Header="Authorization Options"
                          Grid.Row="1" Grid.Column="1">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Grid.Row="0" Content="Username:" Margin="5"></Label>
                        <TextBox Grid.Column="1" Grid.Row="0"
                             Name="textUsername"
                             Margin="5" HorizontalAlignment="Stretch"></TextBox>
                        <Label Grid.Column="0" Grid.Row="1" Content="Password:" Margin="5"></Label>
                        <PasswordBox Grid.Column="1" Grid.Row="1"
                                 Name="passwordBox"
                                 Margin="5" HorizontalAlignment="Stretch">
                        </PasswordBox>
                    </Grid>
                </Expander>
            </Grid>
            <StackPanel Orientation="Horizontal">
                <GroupBox Header="Incoming/Outgoing options:"
                          Foreground="{DynamicResource {x:Static SystemColors.ControlTextColor}}"
                          Margin="5,5,0,5"
                          Padding="5">
                    <StackPanel>
                        <CheckBox Content="Show newest record first"
                                  IsChecked="{Binding ElementName=root, Path=ShowNewestFirst}">
                        </CheckBox>
                        <CheckBox Content="Show patch"
                                  IsChecked="{Binding ElementName=root, Path=ShowPatch}">
                        </CheckBox>
                        <CheckBox Content="Do not show merges"
                                  IsChecked="{Binding ElementName=root, Path=ShowNoMerges}">
                        </CheckBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Pull options:"
                          Foreground="{DynamicResource {x:Static SystemColors.ControlTextColor}}"
                          Margin="5,5,0,5"
                          Padding="5">
                    <StackPanel>
                        <CheckBox Content="Update after pull"
                          IsChecked="{Binding ElementName=root, Path=UpdateAfterPull}">
                        </CheckBox>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Other options:"
                          Foreground="{DynamicResource {x:Static SystemColors.ControlTextColor}}"
                          Margin="5"
                          Padding="5">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Target Revision:"></Label>
                            <TextBox Name="textBoxRevision" MinWidth="250">
                            </TextBox>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </StackPanel>
        <TextBox Grid.Row="2"
                 Name="textBox"
                 HorizontalContentAlignment="Stretch"
                 VerticalContentAlignment="Stretch"
                 VerticalScrollBarVisibility="Visible"
                 HorizontalScrollBarVisibility="Visible"
                 FontFamily="Courier New"
                 Margin="5,0,5,5"
                 IsReadOnly="True">
        </TextBox>
    </Grid>
</Window>
